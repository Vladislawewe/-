// Symbol table
// Scope level 0:
//	Symbol Name       Page Address
//	----------------  ------------
//	LOOP_READ         3002
//	SORT              3011
//	OUTLOOP           3013
//	INLOOP            3017
//	SKIP_SWAP         301D
//	SWAP              3021
//	OUTPUT_LOOP       3024
//	LOOP_PRINT        3026
//	END               3031
//	INIT              3032
//	STRING            3033
//	NEWLINE           3044
//	POS48             3046
//	NEG48             3047
//	NUMBERS           3048
//	COUNT             304D

• Таблица символов: Это структура данных, которая хранит информацию о всех именах (идентификаторах), используемых в программе. Она сопоставляет каждое имя с его данными, например, типом, значением и адресом памяти.

Как используются таблицы символов:

1. Объявление: Во время компиляции или интерпретации программы, когда объявляется новый символ (например, переменная или функция), его информация добавляется в таблицу символов.
2. Поиск: Когда компилятор или интерпретатор встречает идентификатор, он ищет его в таблице символов, чтобы найти соответствующие данные. Это позволяет программе правильно получить доступ к переменным, вызывать функции и обрабатывать другие символические ссылки.
3. Управление областями видимости: Таблицы символов помогают управлять областью видимости переменных. В языках с вложенными блоками или функциями создаются отдельные таблицы символов для каждой области, чтобы избежать конфликтов между переменными из разных областей. 
